---
# where do we want to install
- hosts: web

# get the facts
  gather_facts: yes

# changes access to root user
  become: true

# what do we want ansible to do for us in the playbook
# In this case our only task is to install nginx

  tasks:

  # Part I Installing Nginx
  - name: Install nginx from Apt-Get
    become: yes
    apt: pkg=nginx state=present

  - name: Unlinking the Nginx File
    become: yes
    command:
      cmd: unlink /etc/nginx/sites-enabled/default

  - name: Creating an NGINX Conf File
    become: yes
    file:
      path: /etc/nginx/sites-available/reverse-proxy.conf
      state: touch

    # Using blockinfile to write commands into a file
    # Using marker "" to insert/update/remove text block within marker lines
  - name: Amending the NGINX Conf File
    become: yes
    blockinfile:
      path: /etc/nginx/sites-available/reverse-proxy.conf
      marker: ""
      block: |
        server {
           listen 80;
           server_name development.local;
           location / {
               proxy_pass http://127.0.0.1:3000;
           }

  - name: Creating symbolic link
    become: yes
    file:
      src: /etc/nginx/sites-available/reverse-proxy.conf
      dest: /etc/nginx/sites-enabled/reverse-proxy.conf
      state: link

  - name: Running and restarting NGINX service
    become: yes
    service:
      name: nginx
      state: restarted
      enabled: yes

#  - name: Configuring Reverse Proxy
#    shell: |
#      sudo unlink /etc/nginx/sites-enabled/default
#      cd /etc/nginx/sites-available
#      sudo touch reverse-proxy.conf
#      sudo chmod 666 reverse-proxy.conf
#      echo "server{
#        listen 80;
#        server_name development.local;
#        location / {
#            proxy_pass http://127.0.0.1:3000;
#        }
#      }" >> reverse-proxy.conf
#      sudo ln -s /etc/nginx/sites-available/reverse-proxy.conf /etc/nginx/sites-enabled/reverse-proxy.conf
#      sudo service nginx restart


  # Part II Installing Nodejs
  - name: Install Nodejs
    apt: pkg=nodejs state=present

  - name: Install NPM
    apt: pkg=npm state=present

  - name: Install NPM modules
    shell: |
      npm install -g npm@latest
      npm install mongoose -y

  # Installing Pm2, a process management module for Node.js to monitor Node.js
  # If the app goes down e.g node app.js process dies, process manager can restart the app
  # Installing pm2 globally, so that all node.js applications on the web server can import and use installed packages
  - name: Install pm2
    npm:
      name: pm2
      global: yes


  # Part III Running the app and using pm2 kill to stop any previous active instances before starting the app again
#  - name: Running NPM Install and Running the app
#    shell: |
#      cd app/
#      npm install
#      pm2 kill
#      pm2 start app.js
#    environment:
#      DB_HOST: mongodb://vagrant@192.168.33.11:27017/posts?authSource=admin

  - name: Running NPM Install
    npm:
      path: /app/
      state: present

  - name: NODE | Stop app.js
    shell: pm2 stop app.js

  - name: NODE | Start App.js
    shell: pm2 start app.js


